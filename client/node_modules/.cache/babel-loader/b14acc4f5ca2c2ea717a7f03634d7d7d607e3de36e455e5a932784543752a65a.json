{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport \"./TaskFrom.styles.scss\";\nimport { addTask, fetchAllTasks, updateTask } from \"../../utils/utils\";\nimport { TasksContext } from \"../../context/tasks.context\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskForm = _ref => {\n  _s();\n  let {\n    operationType,\n    task = {\n      title: '',\n      dueDate: '',\n      description: ''\n    }\n  } = _ref;\n  const {\n    setAllTasks,\n    setTasksToDisplay\n  } = useContext(TasksContext);\n  const [formFields, setFormFields] = useState(task);\n  const [displayForm, setDisplayForm] = useState(false);\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    return setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (operationType.toLowerCase() === \"add\") {\n      const res = await addTask(formFields, setDisplayForm);\n      if (res.status === 200) {\n        alert(\"Task Added\");\n        return setDisplayForm(false);\n      }\n      return alert(\"Unable to add the task\");\n    } else {\n      const res = await updateTask(formFields);\n      if (res.status === 200) {\n        alert(\"Task Details Updated\");\n        fetchAllTasks(setAllTasks, setTasksToDisplay);\n        return setDisplayForm(false);\n      }\n      return alert(\"Unable to update the task details\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"displayForm &&\"\n  }, void 0, false);\n};\n_s(TaskForm, \"Y1qN+6JDPh4owDRKks2hCGFfwsU=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["useContext","useState","addTask","fetchAllTasks","updateTask","TasksContext","Fragment","_Fragment","jsxDEV","_jsxDEV","TaskForm","_ref","_s","operationType","task","title","dueDate","description","setAllTasks","setTasksToDisplay","formFields","setFormFields","displayForm","setDisplayForm","changeHandler","e","name","value","target","submitHandler","preventDefault","toLowerCase","res","status","alert","children","_c","$RefreshReg$"],"sources":["/Users/abhishekshrestha/Documents/intern-project/todo-app/client/src/components/Form/TaskForm.component.jsx"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport \"./TaskFrom.styles.scss\";\nimport { addTask, fetchAllTasks, updateTask } from \"../../utils/utils\";\nimport { TasksContext } from \"../../context/tasks.context\";\n\nexport const TaskForm = ({ operationType, task = { title: '', dueDate: '', description: '' } }) => {\n\n    const { setAllTasks, setTasksToDisplay } = useContext(TasksContext);\n\n    const [formFields, setFormFields] = useState(task);\n    const [displayForm, setDisplayForm] = useState(false);\n\n    const changeHandler = (e) => {\n\n        const { name, value } = e.target;\n\n        return setFormFields({ ...formFields, [name]: value })\n    }\n\n    const submitHandler = async (e) => {\n\n        e.preventDefault();\n\n        if (operationType.toLowerCase() === \"add\") {\n\n            const res = await addTask(formFields, setDisplayForm);\n\n            if (res.status === 200) {\n                alert(\"Task Added\");\n                return setDisplayForm(false);\n            }\n\n            return alert(\"Unable to add the task\")\n\n        } else {\n\n            const res = await updateTask(formFields);\n\n            if (res.status === 200) {\n                alert(\"Task Details Updated\");\n                fetchAllTasks(setAllTasks, setTasksToDisplay);\n                return setDisplayForm(false);\n            }\n\n            return alert(\"Unable to update the task details\");\n        }\n    }\n\n\n    return (\n        <>\n            displayForm && \n        </>\n        \n    )\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAO,wBAAwB;AAC/B,SAASC,OAAO,EAAEC,aAAa,EAAEC,UAAU,QAAQ,mBAAmB;AACtE,SAASC,YAAY,QAAQ,6BAA6B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAA2E;EAAAC,EAAA;EAAA,IAA1E;IAAEC,aAAa;IAAEC,IAAI,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG;EAAE,CAAC,GAAAN,IAAA;EAE1F,MAAM;IAAEO,WAAW;IAAEC;EAAkB,CAAC,GAAGnB,UAAU,CAACK,YAAY,CAAC;EAEnE,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAACa,IAAI,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMuB,aAAa,GAAIC,CAAC,IAAK;IAEzB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEhC,OAAOP,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC1D,CAAC;EAED,MAAME,aAAa,GAAG,MAAOJ,CAAC,IAAK;IAE/BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAIjB,aAAa,CAACkB,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;MAEvC,MAAMC,GAAG,GAAG,MAAM9B,OAAO,CAACkB,UAAU,EAAEG,cAAc,CAAC;MAErD,IAAIS,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpBC,KAAK,CAAC,YAAY,CAAC;QACnB,OAAOX,cAAc,CAAC,KAAK,CAAC;MAChC;MAEA,OAAOW,KAAK,CAAC,wBAAwB,CAAC;IAE1C,CAAC,MAAM;MAEH,MAAMF,GAAG,GAAG,MAAM5B,UAAU,CAACgB,UAAU,CAAC;MAExC,IAAIY,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACpBC,KAAK,CAAC,sBAAsB,CAAC;QAC7B/B,aAAa,CAACe,WAAW,EAAEC,iBAAiB,CAAC;QAC7C,OAAOI,cAAc,CAAC,KAAK,CAAC;MAChC;MAEA,OAAOW,KAAK,CAAC,mCAAmC,CAAC;IACrD;EACJ,CAAC;EAGD,oBACIzB,OAAA,CAAAF,SAAA;IAAA4B,QAAA,EAAE;EAEF,gBAAE,CAAC;AAGX,CAAC;AAAAvB,EAAA,CAlDYF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}